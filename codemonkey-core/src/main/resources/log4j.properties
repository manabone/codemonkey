# Log4J configuring file for application logging

# Define the default log level, and the default appenders
log4j.rootCategory=WARN, CONSOLE, FILE

log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
#log4j.appender.CONSOLE.layout.ConversionPattern=[${name}] %d{HH:mm:ss-SSS} [%t] %X{session_id} %p %X{login} %C.%M(%L) | %m%n
log4j.appender.CONSOLE.layout.ConversionPattern=%d{HH:mm:ss-SSS} [%t] %C.%M | %m%n

log4j.appender.FILE=org.apache.log4j.RollingFileAppender

# You can change this to be an absolute path or even an environment variable
# If you're using an environment variable, you will have to set JAVA_OPTS
# to contain this variables - for example in the catalina.sh or catalina.bat
# file
log4j.appender.FILE.File=logs/${artifactId}-${version}.log

log4j.appender.FILE.MaxFileSize=5000KB
log4j.appender.FILE.MaxBackupIndex=20

log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern=[${artifactId}] [%d{yyyy-MM-dd HH:mm:ss-SSS}] [%t] [%X{session_id}] [%p] [%X{login}] [%C.%M(%L)] | %m%n

# If programmed properly the most messages would be at WARN
# and the least at FATAL.

# ----- APPLICATION
log4j.logger.com.codemonkey=INFO

# ----- JSF Phase listener (debug purpose)
# log4j.logger.org.springframework.faces.support.RequestLoggingPhaseListener=${log4j.level}

# ----- TRANSACTION
log4j.logger.org.springframework.transaction=WARN
log4j.logger.org.springframework.orm.hibernate3=WARN

# ----- HIBERNATE & CACHE SPECIFIC
log4j.logger.org.hibernate.cache.EhCacheProvider=ERROR

# All hibernate log output of "WARN" level or higher goes to CONSOLE.
# For more verbose logging, change the "WARN" to "WARN" on the last line.
log4j.logger.org.hibernate=WARN

# Log Hibernate SQL queries to file (must force the appender to  FILE)
# (log level must be DEBUG to enable it)
log4j.logger.org.hibernate.SQL=${log4j.level}, FILE
log4j.additivity.org.hibernate.SQL=false

# log the param value in the prepared statement and the query result!
# (log level must be DEBUG to enable it)
log4j.logger.org.hibernate.type=WARN

# ----- OTHER OPEN SOURCE PACKAGES
# avoid misleading log "No service named XXX is available"
# More on this topic: http://wiki.apache.org/ws/FrontPage/Axis/DealingWithCommonExceptions
log4j.logger.org.springframework.security=WARN
log4j.logger.org.apache.commons=WARN
log4j.logger.org.apache.velocity=WARN
log4j.logger.org.springframework=INFO
log4j.logger.com.codemonkey=INFO
log4j.logger.org.mybatis.example=DEBUG
#log4j.logger.org.springframework.beans.factory.support=WARN
# URL rewrite
log4j.logger.org.tuckey=WARN

# ----- SUBSTITUTE SYMBOL
# %c Logger, %c{2 } last 2 partial names
# %C Class name (full agony), %C{2 } last 2 partial names
# %d{dd MMM yyyy HH:MM:ss } Date, format see java.text.SimpleDateFormat, If no date format specifier is given then ISO8601 format is assumed.
# %F File name
# %l Location (caution: compiler-option-dependently)
# %L Line number
# %m user-defined message
# %M Method name
# %p Level
# %r Milliseconds since program start
# %t Threadname
# %x, %X see Doku
# %% individual percentage sign
# Caution: %C, %F, %l, %L, %M slow down program run!