<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans 	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
    http://www.springframework.org/schema/context 	http://www.springframework.org/schema/context/spring-context-3.0.xsd    
    http://www.springframework.org/schema/util 		http://www.springframework.org/schema/util/spring-util-3.0.xsd    
    http://www.springframework.org/schema/security 	http://www.springframework.org/schema/security/spring-security-3.0.xsd    
    http://www.springframework.org/schema/tx 		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd    
    http://www.springframework.org/schema/mvc 		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd    
    http://www.springframework.org/schema/task 		http://www.springframework.org/schema/task/spring-task-3.0.xsd    
    http://www.springframework.org/schema/aop 		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    <description><![CDATA[
		Main entry point for spring configuration
	]]></description>

	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <!-- Activates scanning of @Repository and @Service -->
	<context:component-scan base-package="com.codemonkey"/>

 	<!-- Enable @Transactional support -->
    <tx:annotation-driven/>


    <!-- Activates scanning of @Autowired -->
    <context:annotation-config/>
    
	<bean id="appSettingBundle" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
            <list>
                <value>classpath:app_settings_windows</value>
		        <value>classpath:app_settings_linux</value>
		        <value>classpath:ApplicationResources</value>
            </list>
        </property>
        <property name="cacheSeconds" value="120"/>
	</bean>
	
	<bean id="messageBundle" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
            <list>
		        <value>classpath:messages/Foo</value>
		        <value>classpath:messages/AppRole</value>
            </list>
        </property>
        <property name="cacheSeconds" value="120"/>
	</bean>
	
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url.test}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name ="packagesToScan"  value ="com.codemonkey" />
        <property name="namingStrategy" ref="namingStrategy" />
        <property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>						
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
				<prop key="hibernate.validator.autoregister_listeners">${hibernate.validator.autoregister_listeners}</prop>
				<prop key="hibernate.cache.use_structured_entries">${hibernate.cache.use_structured_entries}</prop>				
				<prop key="hibernate.query.substitutions">${hibernate.query.substitutions}</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">${hibernate.bytecode.use_reflection_optimizer}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>		
				<prop key="hibernate.transaction.flush_before_completion">${hibernate.transaction.flush_before_completion}</prop>		
				<prop key="hibernate.transaction.auto_close_session">${hibernate.transaction.auto_close_session}</prop>
				<prop key="hibernate.order_updates">${hibernate.order_updates}</prop> 				
				<prop key="hibernate.order_inserts">true</prop>
				<prop key="hibernate.jdbc.batch_versioned_data">${hibernate.jdbc.batch_versioned_data}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>				 				
				<prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<!-- 
				<prop key="hibernate.default_schema">${hibernate.default_schema}</prop>
				-->
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
    </bean>
    
    <bean id="namingStrategy" class="org.hibernate.cfg.ImprovedNamingStrategy"/>
    
    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <!-- 
    	transaction config
     -->
    <aop:config proxy-target-class="true" >
        <aop:advisor pointcut="execution(* com.*..*.*Service*.*(..))" advice-ref="txServiceAdvice"/>
    </aop:config>
	
    <tx:advice id="txServiceAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="do*" propagation="REQUIRED" />
            <tx:method name="*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>
	
</beans>